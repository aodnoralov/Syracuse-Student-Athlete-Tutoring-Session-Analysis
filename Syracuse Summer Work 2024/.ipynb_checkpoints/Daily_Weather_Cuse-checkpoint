{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "d4169de2",
   "metadata": {},
   "outputs": [],
   "source": [
    "# not all packages probably needed\n",
    "\n",
    "from bs4 import BeautifulSoup\n",
    "import pandas as pd\n",
    "import time\n",
    "import random\n",
    "import re\n",
    "import numpy as np"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "9cb15ef8",
   "metadata": {},
   "outputs": [],
   "source": [
    "# need to download and install chromedriver\n",
    "\n",
    "from selenium import webdriver\n",
    "driver = webdriver.Chrome()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "b76d168f",
   "metadata": {},
   "outputs": [],
   "source": [
    "# function for getting weather\n",
    "\n",
    "def get_daily_weather(city, date):\n",
    "    url = 'https://www.wunderground.com/history/daily/' + str(city) + '/date/' + str(date)\n",
    "    driver.get(url)\n",
    "    time.sleep(random.randint(2,6))\n",
    "    soup = BeautifulSoup(driver.page_source, 'lxml')\n",
    "    tables = soup.find_all('table')\n",
    "    dfs = pd.read_html(str(tables))\n",
    "    daily = dfs[1]\n",
    "    daily['City'] = city\n",
    "    daily['Date'] = date\n",
    "    return daily"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "5f97a668",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['2023-08-01',\n",
       " '2023-08-02',\n",
       " '2023-08-03',\n",
       " '2023-08-04',\n",
       " '2023-08-05',\n",
       " '2023-08-06',\n",
       " '2023-08-07',\n",
       " '2023-08-08',\n",
       " '2023-08-09',\n",
       " '2023-08-10',\n",
       " '2023-08-11',\n",
       " '2023-08-12',\n",
       " '2023-08-13',\n",
       " '2023-08-14',\n",
       " '2023-08-15',\n",
       " '2023-08-16',\n",
       " '2023-08-17',\n",
       " '2023-08-18',\n",
       " '2023-08-19',\n",
       " '2023-08-20',\n",
       " '2023-08-21',\n",
       " '2023-08-22',\n",
       " '2023-08-23',\n",
       " '2023-08-24',\n",
       " '2023-08-25',\n",
       " '2023-08-26',\n",
       " '2023-08-27',\n",
       " '2023-08-28',\n",
       " '2023-08-29',\n",
       " '2023-08-30',\n",
       " '2023-08-31',\n",
       " '2023-09-01',\n",
       " '2023-09-02',\n",
       " '2023-09-03',\n",
       " '2023-09-04',\n",
       " '2023-09-05',\n",
       " '2023-09-06',\n",
       " '2023-09-07',\n",
       " '2023-09-08',\n",
       " '2023-09-09',\n",
       " '2023-09-10',\n",
       " '2023-09-11',\n",
       " '2023-09-12',\n",
       " '2023-09-13',\n",
       " '2023-09-14',\n",
       " '2023-09-15',\n",
       " '2023-09-16',\n",
       " '2023-09-17',\n",
       " '2023-09-18',\n",
       " '2023-09-19',\n",
       " '2023-09-20',\n",
       " '2023-09-21',\n",
       " '2023-09-22',\n",
       " '2023-09-23',\n",
       " '2023-09-24',\n",
       " '2023-09-25',\n",
       " '2023-09-26',\n",
       " '2023-09-27',\n",
       " '2023-09-28',\n",
       " '2023-09-29',\n",
       " '2023-09-30',\n",
       " '2023-10-01',\n",
       " '2023-10-02',\n",
       " '2023-10-03',\n",
       " '2023-10-04',\n",
       " '2023-10-05',\n",
       " '2023-10-06',\n",
       " '2023-10-07',\n",
       " '2023-10-08',\n",
       " '2023-10-09',\n",
       " '2023-10-10',\n",
       " '2023-10-11',\n",
       " '2023-10-12',\n",
       " '2023-10-13',\n",
       " '2023-10-14',\n",
       " '2023-10-15',\n",
       " '2023-10-16',\n",
       " '2023-10-17',\n",
       " '2023-10-18',\n",
       " '2023-10-19',\n",
       " '2023-10-20',\n",
       " '2023-10-21',\n",
       " '2023-10-22',\n",
       " '2023-10-23',\n",
       " '2023-10-24',\n",
       " '2023-10-25',\n",
       " '2023-10-26',\n",
       " '2023-10-27',\n",
       " '2023-10-28',\n",
       " '2023-10-29',\n",
       " '2023-10-30',\n",
       " '2023-10-31',\n",
       " '2023-11-01',\n",
       " '2023-11-02',\n",
       " '2023-11-03',\n",
       " '2023-11-04',\n",
       " '2023-11-05',\n",
       " '2023-11-06',\n",
       " '2023-11-07',\n",
       " '2023-11-08',\n",
       " '2023-11-09',\n",
       " '2023-11-10',\n",
       " '2023-11-11',\n",
       " '2023-11-12',\n",
       " '2023-11-13',\n",
       " '2023-11-14',\n",
       " '2023-11-15',\n",
       " '2023-11-16',\n",
       " '2023-11-17',\n",
       " '2023-11-18',\n",
       " '2023-11-19',\n",
       " '2023-11-20',\n",
       " '2023-11-21',\n",
       " '2023-11-22',\n",
       " '2023-11-23',\n",
       " '2023-11-24',\n",
       " '2023-11-25',\n",
       " '2023-11-26',\n",
       " '2023-11-27',\n",
       " '2023-11-28',\n",
       " '2023-11-29',\n",
       " '2023-11-30',\n",
       " '2023-12-01',\n",
       " '2023-12-02',\n",
       " '2023-12-03',\n",
       " '2023-12-04',\n",
       " '2023-12-05',\n",
       " '2023-12-06',\n",
       " '2023-12-07',\n",
       " '2023-12-08',\n",
       " '2023-12-09',\n",
       " '2023-12-10',\n",
       " '2023-12-11',\n",
       " '2023-12-12',\n",
       " '2023-12-13',\n",
       " '2023-12-14',\n",
       " '2023-12-15',\n",
       " '2023-12-16',\n",
       " '2023-12-17',\n",
       " '2023-12-18',\n",
       " '2023-12-19',\n",
       " '2023-12-20',\n",
       " '2023-12-21',\n",
       " '2023-12-22',\n",
       " '2023-12-23',\n",
       " '2023-12-24',\n",
       " '2023-12-25',\n",
       " '2023-12-26',\n",
       " '2023-12-27',\n",
       " '2023-12-28',\n",
       " '2023-12-29',\n",
       " '2023-12-30',\n",
       " '2023-12-31',\n",
       " '2024-01-01',\n",
       " '2024-01-02',\n",
       " '2024-01-03',\n",
       " '2024-01-04',\n",
       " '2024-01-05',\n",
       " '2024-01-06',\n",
       " '2024-01-07',\n",
       " '2024-01-08',\n",
       " '2024-01-09',\n",
       " '2024-01-10',\n",
       " '2024-01-11',\n",
       " '2024-01-12',\n",
       " '2024-01-13',\n",
       " '2024-01-14',\n",
       " '2024-01-15',\n",
       " '2024-01-16',\n",
       " '2024-01-17',\n",
       " '2024-01-18',\n",
       " '2024-01-19',\n",
       " '2024-01-20',\n",
       " '2024-01-21',\n",
       " '2024-01-22',\n",
       " '2024-01-23',\n",
       " '2024-01-24',\n",
       " '2024-01-25',\n",
       " '2024-01-26',\n",
       " '2024-01-27',\n",
       " '2024-01-28',\n",
       " '2024-01-29',\n",
       " '2024-01-30',\n",
       " '2024-01-31',\n",
       " '2024-02-01',\n",
       " '2024-02-02',\n",
       " '2024-02-03',\n",
       " '2024-02-04',\n",
       " '2024-02-05',\n",
       " '2024-02-06',\n",
       " '2024-02-07',\n",
       " '2024-02-08',\n",
       " '2024-02-09',\n",
       " '2024-02-10',\n",
       " '2024-02-11',\n",
       " '2024-02-12',\n",
       " '2024-02-13',\n",
       " '2024-02-14',\n",
       " '2024-02-15',\n",
       " '2024-02-16',\n",
       " '2024-02-17',\n",
       " '2024-02-18',\n",
       " '2024-02-19',\n",
       " '2024-02-20',\n",
       " '2024-02-21',\n",
       " '2024-02-22',\n",
       " '2024-02-23',\n",
       " '2024-02-24',\n",
       " '2024-02-25',\n",
       " '2024-02-26',\n",
       " '2024-02-27',\n",
       " '2024-02-28',\n",
       " '2024-02-29',\n",
       " '2024-03-01',\n",
       " '2024-03-02',\n",
       " '2024-03-03',\n",
       " '2024-03-04',\n",
       " '2024-03-05',\n",
       " '2024-03-06',\n",
       " '2024-03-07',\n",
       " '2024-03-08',\n",
       " '2024-03-09',\n",
       " '2024-03-10',\n",
       " '2024-03-11',\n",
       " '2024-03-12',\n",
       " '2024-03-13',\n",
       " '2024-03-14',\n",
       " '2024-03-15',\n",
       " '2024-03-16',\n",
       " '2024-03-17',\n",
       " '2024-03-18',\n",
       " '2024-03-19',\n",
       " '2024-03-20',\n",
       " '2024-03-21',\n",
       " '2024-03-22',\n",
       " '2024-03-23',\n",
       " '2024-03-24',\n",
       " '2024-03-25',\n",
       " '2024-03-26',\n",
       " '2024-03-27',\n",
       " '2024-03-28',\n",
       " '2024-03-29',\n",
       " '2024-03-30',\n",
       " '2024-03-31',\n",
       " '2024-04-01',\n",
       " '2024-04-02',\n",
       " '2024-04-03',\n",
       " '2024-04-04',\n",
       " '2024-04-05',\n",
       " '2024-04-06',\n",
       " '2024-04-07',\n",
       " '2024-04-08',\n",
       " '2024-04-09',\n",
       " '2024-04-10',\n",
       " '2024-04-11',\n",
       " '2024-04-12',\n",
       " '2024-04-13',\n",
       " '2024-04-14',\n",
       " '2024-04-15',\n",
       " '2024-04-16',\n",
       " '2024-04-17',\n",
       " '2024-04-18',\n",
       " '2024-04-19',\n",
       " '2024-04-20',\n",
       " '2024-04-21',\n",
       " '2024-04-22',\n",
       " '2024-04-23',\n",
       " '2024-04-24',\n",
       " '2024-04-25',\n",
       " '2024-04-26',\n",
       " '2024-04-27',\n",
       " '2024-04-28',\n",
       " '2024-04-29',\n",
       " '2024-04-30',\n",
       " '2024-05-01',\n",
       " '2024-05-02',\n",
       " '2024-05-03',\n",
       " '2024-05-04',\n",
       " '2024-05-05',\n",
       " '2024-05-06',\n",
       " '2024-05-07',\n",
       " '2024-05-08',\n",
       " '2024-05-09',\n",
       " '2024-05-10',\n",
       " '2024-05-11',\n",
       " '2024-05-12',\n",
       " '2024-05-13',\n",
       " '2024-05-14',\n",
       " '2024-05-15']"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# example list of cities and dates\n",
    "\n",
    "dates = pd.read_csv('Test_Dates.csv')\n",
    "dates_list = dates['Date'].to_list()\n",
    "dates_list\n",
    "\n",
    "'KSYR2023-04-02'\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "4e946793",
   "metadata": {},
   "outputs": [],
   "source": [
    "# for loop for gathering weather, missing city dates are printed at the bottom\n",
    "weather = []\n",
    "\n",
    "for i in cities_dates:\n",
    "    try:\n",
    "        City = 'KSYR'\n",
    "        Date = i\n",
    "        df = get_daily_weather(City, Date)\n",
    "        weather.append(df)\n",
    "    except (ValueError, IndexError) as error:\n",
    "        print(i)\n",
    "        continue\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "513a184a",
   "metadata": {},
   "outputs": [],
   "source": [
    "# writing final weather df\n",
    "\n",
    "weather_df_final = pd.concat(weather)\n",
    "weather_df_final = weather_df_final.drop_duplicates()\n",
    "weather_df_final.to_csv('weather.csv')"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
